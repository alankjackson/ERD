---
title: "Chronic Inundation Dashboard"
author: "Alan Jackson"
format: dashboard
server: shiny
editor: source
---

```{r}
#| context: setup
### #| include: false

library(tidyverse)
library(stringr)
library(tmap)

googlecrs <- "EPSG:4326"

# path <- "/home/ajackson/Dropbox/Rprojects/TexasDioceseCreationCare/Data/"
Curated_path <- "/home/ajackson/Dropbox/Rprojects/Curated_Data_Files/"

Local_test <- TRUE

#   Directory where data is stored

DataLocation <- "https://www.ajackson.org/ERD/"

if ( Local_test ) {
  df <- readRDS(paste0(Curated_path, "SeaLevel/UCS_sfdata.rds"))
} else {
  z <- url(paste0(DataLocation, "UCS_sfdata.rds"), method="libcurl")
  df <- readRDS(z)
  close(z)
}

Scenarios <- c("2030 High", "2045 High", "2060 High", 
               "2080 High", "2100 High", "2035 Intermediate", 
               "2060 Intermediate", "2080 Intermediate", 
               "2100 Intermediate", "2060 Low", "2100 Low" )

```

# {.sidebar}

```{r}

sliderInput('Pct_poverty', '% in Poverty', 
            min=5, max=100,
            value=10, 
            step=5, round=0)
br()

selectInput('Scenario', 'Scenario', Scenarios)

```

Data from Union of Concerned Scientists dataset plus the 2020 ACS 
census data.

Chronic Inundation is defined as 26 or more days per year where the streets
flood during high tide. 

Scenarios refer to Low, Intermediate, or High models for sea-level rise.
The appended year refers to the year that level of inundation is expected to
occur.

Note that the visible data is also shown as a table in the Data tab.

# Plot

```{r}
tmapOutput('plot')
```

# Data

```{r}
# tableOutput('data')
DT::dataTableOutput('data')
```

```{r}
#| context: server

dataset <- reactive({
  df %>% filter(sheet==input$Scenario) %>% 
    filter(Poverty_pct>=input$Pct_poverty) %>% 
    select(Zip, State, Homes_Risk, Homes_ratio, Poverty_pct) %>% 
    sf::st_as_sf()
})
 
output$plot <- renderTmap({
  
  tmap::tmap_options(basemaps="OpenStreetMap")
  tmap_mode("view")

  dataset() %>%  
    tm_shape() +
  tm_polygons("Poverty_pct", alpha=0.5, popup.vars=c("Zip", 
                                                     "State",
                                                     "Homes_Risk",
                                                     "Homes_ratio",
                                                     "Poverty_pct")) +
    tm_dots(size=0.02)
  
})

# output$data <- renderTable({
output$data <- DT::renderDataTable({
  dataset() %>% sf::st_drop_geometry()} ,
  colnames=c("Zip", "State", "Homes at Risk", 
             "% Homes at Risk", "% Poverty")
)
```


