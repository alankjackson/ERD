---
title: "Valid Registrations Read and Trim"
author: "Alan Jackson"
format: html
editor: source
---

##    Read and do initial processing on large Program Valid Registration file

FEMA applicant-level data for the Individuals and Households Program

https://www.fema.gov/openfema-data-page/individuals-and-households-program-valid-registrations-v1

```{r}

library(tidyverse)

path <- "/home/ajackson/Dropbox/Rprojects/ERD/Data/FEMA_HousingAssist/"

#   Read CSV, all as character.

df <- read_csv(paste0(path, "IndividualsAndHouseholdsProgramValidRegistrations.csv"),
               col_types=stringr::str_dup("c", 71))

df <- df %>% 
  mutate(declarationDate=date(ymd_hms(declarationDate)))

foo <- df %>% 
  filter(declarationDate=="2024-05-17")
foo2 <- df %>% 
  filter(disasterNumber=="4781")

foo3 <- df %>% filter(waterLevel==0) %>% filter(!is.na(highWaterLocation))

#   Let's read in the disaster declaration summaries as well

summaries <- read_csv(paste0(path, "DisasterDeclarationsSummaries.csv"),
               col_types=stringr::str_dup("c", 28))


```

##    What can we filter out?

Looks like "Flood" is a good thing to filter on.

```{r}

unique(df$incidentType)

df2 <- df %>% 
  filter(waterLevel>0)
  # filter(incidentType=="Flood")

#   Drop some fields

df2 <- df2 %>% 
  select(-incidentType, -sbaEligible, -sbaApproved, -registrationMethod,
         -ihpMax, -haMax, -onaMax)

#   Reformat some fields

df2 <- df2 %>% 
mutate(
       primaryResidence=as.logical(as.numeric(primaryResidence)),
       homeOwnersInsurance=as.logical(as.numeric(homeOwnersInsurance)),
       floodInsurance=as.logical(as.numeric(floodInsurance)),
       ihpReferral=as.logical(as.numeric(ihpReferral)),
       ihpEligible=as.logical(as.numeric(ihpEligible)),
       haReferral=as.logical(as.numeric(haReferral)),
       haEligible=as.logical(as.numeric(haEligible)),
       onaReferral=as.logical(as.numeric(onaReferral)),
       onaEligible=as.logical(as.numeric(onaEligible)),
       utilitiesOut=as.logical(as.numeric(utilitiesOut)),
       homeDamage=as.logical(as.numeric(homeDamage)),
       autoDamage=as.logical(as.numeric(autoDamage)),
       emergencyNeeds=as.logical(as.numeric(emergencyNeeds)),
       foodNeed=as.logical(as.numeric(foodNeed)),
       shelterNeed=as.logical(as.numeric(shelterNeed)),
       accessFunctionalNeeds=as.logical(as.numeric(accessFunctionalNeeds)),
       inspnIssued=as.logical(as.numeric(inspnIssued)),
       inspnReturned=as.logical(as.numeric(inspnReturned)),
       habitabilityRepairsRequired=as.logical(as.numeric(habitabilityRepairsRequired)),
       destroyed=as.logical(as.numeric(destroyed)),
       floodDamage=as.logical(as.numeric(floodDamage)),
       foundationDamage=as.logical(as.numeric(foundationDamage)),
       roofDamage=as.logical(as.numeric(roofDamage)),
       tsaEligible=as.logical(as.numeric(tsaEligible)),
       tsaCheckedIn=as.logical(as.numeric(tsaCheckedIn)),
       rentalAssistanceEligible=as.logical(as.numeric(rentalAssistanceEligible)),
       repairAssistanceEligible=as.logical(as.numeric(repairAssistanceEligible)),
       replacementAssistanceEligible=as.logical(as.numeric(replacementAssistanceEligible)),
       personalPropertyEligible=as.logical(as.numeric(personalPropertyEligible))
       ) %>% 
  mutate(ihpAmount=as.numeric(ihpAmount),
         fipAmount=as.numeric(fipAmount),
         haAmount=as.numeric(haAmount),
         onaAmount=as.numeric(onaAmount),
         rpfvl=as.numeric(rpfvl),
         ppfvl=as.numeric(ppfvl),
         waterLevel=as.numeric(waterLevel),
         floodDamageAmount=as.numeric(floodDamageAmount),
         foundationDamageAmount=as.numeric(foundationDamageAmount),
         roofDamageAmount=as.numeric(roofDamageAmount),
         rentalAssistanceAmount=as.numeric(rentalAssistanceAmount),
         repairAmount=as.numeric(repairAmount),
         replacementAmount=as.numeric(replacementAmount),
         personalPropertyAmount=as.numeric(personalPropertyAmount)
         )

saveRDS(df2, paste0(path, "ValidRegis.rds"))

```













